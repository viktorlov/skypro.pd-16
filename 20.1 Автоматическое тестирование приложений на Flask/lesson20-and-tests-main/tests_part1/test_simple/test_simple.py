# В этом задании необходимо проверить корректность
# работы функции summer. 
# Вам необходимо написать 4 теста 
# каждый из которых проверил бы правильность
# утверждений.
#
# Изначально функция summer была задумана следующим образом:
#    1.  Функция складывает позиционные аргументы 
#        и возвращает правильный ответ.
#        summer(3,6,9) == 18
#       - Реализуйте проверку в функции test_sum()
#    2.  Функция возвращает ответ "Большое число" если
#        сумма переданных аргументов превышает 300.
#        summer(299, 25) == "Большое число"
#        - Реализуйте проверку в функции test_big_number()
#    3.  Функция возвращает ответ "Мало аргументов"
#        Если передан только один аргумент.
#        summer(301) == "Мало аргументов"
#        - Реализуйте проверку в функции test_one_arg
#    4.  Функция возвращает ответ "ОШИБКА"
#        Если в аргументах передано не целое число.
#        summer("qwe") == "ОШИБКА"
#        - Реализуйте проверку в функции test_wrong_arg
#
#   При этом в текущем уроке к сожалению при запуске 
#   тестов в PyCharm может возникнуть ошибка
#   связанная с настройками Pycharm (здесь нам приходится
#   одновременно использовать несколько пакетов 
#   для тестирования). Если Наши тесты у Вас не работают просим Вас
#   запускать их через терминал, для этого:
#   1. В терминале Pycharm переходим в папку с заданием.
#   2. Запускаем тесты командой python -m unittest
#
#   Запустить Ваши тесты можно также в терминале
#   с помощью команды pytest, выполненной в корне папки с заданием

import os


def summer(*args):
    for arg in args:
        if not isinstance(arg, int):
            return "ОШИБКА"
    if len(args) == 1:
        return "Мало аргументов"
    if sum(args) > 300:
        return "Большое число"
    return sum(args)


def test_sum():
    assert summer(3, 6, 9) == 18, "ERROR 1: arithmetic"


def test_big_number():
    assert summer(299, 25) == "Большое число", "ERROR 2: out of range"


def test_one_arg():
    assert summer(1) == "Мало аргументов", "ERROR 3: argument error"


def test_wrong_arg():
    assert summer("1", "qwe") == "ОШИБКА", "ERROR 4: type error"


if __name__ == "__main__":
    os.system("pytest")
